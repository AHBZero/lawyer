<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:jpa="http://www.springframework.org/schema/data/jpa"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/jdbc
            http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
            http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       	     http://www.springframework.org/schema/data/jpa
             http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <!-- Inclui os arquivos de configuração do core e do spring security -->
    <!--beans:import resource="classpath:spring-context-core.xml" /-->
    <beans:import resource="spring-context-security-test.xml"/>

    <context:component-scan base-package="br.com.lawyer.core.authentication"/>
    <context:component-scan base-package="br.com.lawyer.web.delegate"/>
    <context:annotation-config/>

    <!-- Mapeamento dos arquivos estáticos da aplicação. JS, CSS, Imagens, etc. -->
    <mvc:resources mapping="/assets/**" location="/secure/assets/"/>
    <mvc:resources mapping="/assets-login/**" location="/authentication/assets-login/"/>
    <mvc:resources mapping="/errors/js/**" location="/errors/js/"/>

    <!-- Define os pacotes que o spring vai procurar por controllers e services. Eu prefiro separá-los ao invés de deixar a raiz
     Em casos do projeto ter um package com repositories, pode haver o carreegamento incorreto dos beans -->
    <context:component-scan base-package="br.com.lawyer.web.annotation"/>
    <context:component-scan base-package="br.com.lawyer.web.api"/>
    <context:component-scan base-package="br.com.lawyer.web.authentication"/>
    <context:component-scan base-package="br.com.lawyer.web.controller"/>

    <!-- Define o scan do Spring -->
    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>

    <!-- View resolver para saber qual diretório e qual extensão procurar quando uma página e retornada -->
    <beans:bean id="viewResolver"
                class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/"/>
        <beans:property name="suffix" value=".html"/>
    </beans:bean>

    <!-- Define o mapeamento de URLs padrão do Spring -->
    <beans:bean
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    </beans:bean>


    <beans:bean id="dataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <beans:property name="driverClassName" value="org.postgresql.Driver" />
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/lawyer" />
        <beans:property name="username" value="postgres" />
        <beans:property name="password" value="admin" />
    </beans:bean>

    <beans:bean id="entityManagerFactory"
                class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgresPlusDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.format_sql">true</beans:prop>
            </beans:props>
        </beans:property>
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- Propriedade se true exibe no log as queries que são geradas pelo hibernate -->
                <beans:property name="showSql" value="true"/>
            </beans:bean>
        </beans:property>
    </beans:bean>

    <!--context:load-time-weaver  weaver-class="org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver"/-->

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
        <beans:property name="dataSource" ref="dataSource"/>
    </beans:bean>

    <!-- Use @Transaction annotations for managing transactions -->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- Define o package para scan de classes de repositórios do Spring data JPA -->
    <jpa:repositories base-package="br.com.lawyer.core.repository"/>

</beans:beans>