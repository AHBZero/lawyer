<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:jee="http://www.springframework.org/schema/jee"
             xmlns:jpa="http://www.springframework.org/schema/data/jpa"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      		 http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		     http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
             http://www.springframework.org/schema/data/jpa
             http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
             http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">

    <!-- Mapeamento dos services do projeto -->
    <context:component-scan base-package="br.com.lawyer.core.service" />
    <context:component-scan base-package="br.com.lawyer.core.repository" />
    <context:component-scan base-package="br.com.lawyer.core.authentication" />
    <context:annotation-config />

    <jee:jndi-lookup id="lawyerDS" jndi-name="java:jboss/postgresDS" />

    <beans:bean id="emf"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <beans:property name="dataSource" ref="lawyerDS" />
        <beans:property name="jpaProperties">
            <beans:props>
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgresPlusDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.format_sql">true</beans:prop>
            </beans:props>
        </beans:property>
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- Propriedade se true exibe no log as queries que são geradas pelo hibernate -->
                <!--beans:property name="showSql" value="true" /-->
            </beans:bean>
        </beans:property>
    </beans:bean>

    <beans:bean id="entityManager"
          class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <beans:property name="entityManagerFactory" ref="emf" />
    </beans:bean>

    <context:load-time-weaver  weaver-class="org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver"/>

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="emf" />
        <beans:property name="dataSource" ref="lawyerDS" />
    </beans:bean>

    <!-- Use @Transaction annotations for managing transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <!--tx:jta-transaction-manager/-->

    <!-- Define o package para scan de classes de repositórios do Spring data JPA -->
    <jpa:repositories base-package="br.com.lawyer.core.repository" entity-manager-factory-ref="emf"
            transaction-manager-ref="transactionManager" />

</beans:beans>